/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app;

import java.sql.*;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author professional
 */
public class TestStatusPanel extends javax.swing.JPanel {

    Admin adminFrame;
    Connection con;
    Statement s;
    ResultSet rs;

    /**
     * Creates new form TestStatusPanel
     */
    public TestStatusPanel(Admin adminFrame) {
        this.adminFrame = adminFrame;
        initComponents();
        retrieveFromDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        showStatusTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        showStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student Id", "Test Id", "Test Status", "Marks Scored"
            }
        ));
        jScrollPane1.setViewportView(showStatusTable);

        updateButton.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.setBorderPainted(false);
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateButton.setIconTextGap(0);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        cancelButton.setText("CANCEL");
        cancelButton.setBorderPainted(false);
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cancelButton.setIconTextGap(0);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(updateButton)
                        .addGap(43, 43, 43)
                        .addComponent(cancelButton)
                        .addGap(0, 71, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(cancelButton))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        createOrUpdateTable();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable showStatusTable;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    private void retrieveFromDatabase() {
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        try {
            con = DriverManager.getConnection("jdbc:odbc:ProjectDatabase");
            s = con.createStatement();

            //To process database records
            createOrUpdateTable();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void createOrUpdateTable() {
        try {
            s.execute("select TestId from CurrentTest");
            rs = s.getResultSet();
            int rowCount = 0;
            if (rs != null) {
                while (rs.next()) {
                    rowCount++;
                }
            }
            s.execute("select * from CurrentTest");
            rs = s.getResultSet();

            Object data[] = new Object[4];

            int i = 0;
            int studId;
            int testId;
            int testStatus;
            String statusToBeShown = "";
            int marksScored;

            DefaultTableModel testTableModel = (DefaultTableModel)showStatusTable.getModel();
            testTableModel.setNumRows(0);
            if (rs != null) {

                while (rs.next()) {

                    studId = rs.getInt(1);
                    testId = rs.getInt(2);
                    testStatus = rs.getInt(3);
                    if (testStatus == 0) {
                        statusToBeShown = "Test Not Started";
                    } else if (testStatus == 1) {
                        statusToBeShown = "Performing Test";
                    } else if (testStatus == 2) {
                        statusToBeShown = "Test Completed";
                    }
                    marksScored = rs.getInt(4);

                    data[0] = Integer.toString(studId);
                    data[1] = Integer.toString(testId);
                    data[2] = statusToBeShown;
                    data[3] = Integer.toString(marksScored);

                    testTableModel.insertRow(i, data);

                    i++;
                }
            }
            showStatusTable.validate();
            showStatusTable.repaint();
            adminFrame.getRootPane().updateUI();
            SwingUtilities.updateComponentTreeUI(this);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }
}
